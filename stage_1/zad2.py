from turtle import *
from math import sqrt

#https://logia.oeiizk.waw.pl/strony/bankzadan/L25_e1_zad2.pdf
#You can translate the exercise via google translator.

tracer(0, 0)

def piramida(n):
    size = sqrt(((600 / n)**2) / 2)
    sqrt_2 = (sqrt(2))
    def piramida1(n):
        def kwadrat():
            right(45)
            def patyk(color):
                penup()
                pencolor(color)
                fillcolor(color)
                begin_fill()
                forward(size)
                left(135)
                forward(size * (1 / 6) * sqrt_2)
                left(45)
                forward(size * (2 / 3))
                left(45)
                forward(size * (1 / 6) * sqrt_2)
                left(135)
                forward(size)
                end_fill()
                begin_fill()
                left(90)
                forward(size)
                left(135)
                forward(size * (1 / 6) * sqrt_2)
                right(135)
                forward(-size * (2 / 3))
                end_fill()
                forward(size * (2 / 3))
                right(45)
                forward(size * (1 / 6) * sqrt_2)
                left(45)
            patyk("orange")
            left(90)
            patyk("Tomato")
            left(135)
            forward(size * (1 / 6) * sqrt_2)
            left(45)
            begin_fill()
            fillcolor("orange")
            pencolor("orange")
            forward(size * (2 / 3))
            right(90)
            forward(size * (2 / 6))
            right(90)
            forward(size * (2 / 6))
            right(45)
            forward(size * (2 / 6) * sqrt_2)
            end_fill()
            begin_fill()
            fillcolor("white")
            pencolor("white")
            left(135)
            forward(size * (2 / 3))
            left(90)
            forward(size * (2 / 6))
            left(90)
            forward(size * (2 / 6))
            right(135)
            forward(-size * (2 / 6) * sqrt_2)
            end_fill()
            forward(size * (2 / 6) * sqrt_2)
            left(45)
            begin_fill()
            fillcolor("olive")
            pencolor("olive")
            for _ in range(4):
                forward(size * (2 / 6))
                right(90)
            end_fill()
            right(45)
            forward(size * (2 / 6) * sqrt_2)
            penup()
            forward(size * (1 / 6) * sqrt_2)
            pendown()
        wynik = n
        for i in range(n):
            for i in range(wynik):
                kwadrat()   
            penup()
            goto(-300, -150)
            left(45)
            forward((size * (6 / 6)) * (n - wynik + 1))
            right(45)
            pendown()
            wynik -= 1
    def piramida2(n):
        def kwadrat():
            right(45)
            def patyk(color):
                penup()
                for i in range(2):
                    pencolor(color)
                    fillcolor(color)
                    begin_fill()
                    forward(size)
                    left(135)
                    forward((size * (1 / 6)) * sqrt(2))
                    left(45)
                    forward(size * (4 / 6))
                    left(45)
                    forward((size * (1 / 6)) * sqrt(2))
                    left(135)
                    forward(size * (6 / 6))
                    left(90)
                    end_fill()
            pendown()
            patyk("orange")
            patyk("Tomato") 
            penup()
            left(45)
            forward((size * (1 / 6)) * sqrt(2))
            left(45)
            begin_fill()
            fillcolor("olive")
            pencolor("olive")
            for _ in range(4):
                forward(size * (4 / 6))
                right(90)
            end_fill()
            penup()
            begin_fill()
            fillcolor("orange")
            pencolor("orange")
            forward(size * (4 / 6))
            right(90)
            forward(size * (2 / 6) )
            right(90)
            forward(size * (2 / 6))
            right(45)
            forward((size * (1 / 6) * sqrt(2)) * 2)
            end_fill()
            left(135)
            begin_fill()
            fillcolor("white")
            pencolor("white")
            forward(size * (4 / 6))
            left(90)
            forward(size * (2 / 6) )
            left(90)
            forward(size * (2 / 6))
            right(135)
            forward((-size * (1 / 6) * sqrt(2)) * 2)
            end_fill()
            pencolor("orange")
            pendown()
            forward((size * (1 / 6) * sqrt(2)) * 2)
            right(45)
            pencolor("olive")

            pendown()
            forward(size * (2 / 6))
            right(90)
            pencolor("orange")
            forward(size * (2 / 6))
            
            forward(-size * (2 / 6))
            right(90)
            pencolor("olive")
            forward(size * (2 / 6))
            right(135)
            left(45)
            forward(size * (2 / 6))
            pencolor("orange")
            left(90)
            pendown()
            forward(size * (2 / 6))
            forward(-size * (2 / 6))
            right(90)
            pencolor("olive")
            forward((-size * (2 / 6)))
            penup()
            right(45)
            forward((size * (1 / 6) * sqrt(2)) * 3)

        wynik = n
        for i in range(n):
            for i in range(wynik):
                kwadrat()   
            penup()
            goto(-300, -150)
            left(45)
            forward((size * (6 / 6)) * (n - wynik + 1))
            right(45)
            pendown()
            wynik -= 1
    #speed(0)
    penup()
    goto(-300, -150)
    pendown()
    piramida2(n)
    penup()
    goto(-300, -150)
    piramida1(n)
    penup()
    goto(-300, -150)
    forward(600)
    done()
n = int(input())
piramida(n)
tracer.update()
